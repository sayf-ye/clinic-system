/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.forms.cams;

import com.database.cams.DatabaseManager;
import com.models.cams.Prescription;
import com.models.cams.User;
import com.shared.cams.Alert;
import com.shared.cams.Helper;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class GUIPrescriptionManager extends javax.swing.JFrame {

    /**
     * Creates new form GUIPrescription
     */
    static JFrame parentPage;
    static User logger;
    static Prescription prescription = null;
    
    public GUIPrescriptionManager(JFrame parentPage,User logger,Prescription prescription) {
        initComponents();
        
        this.parentPage = parentPage;
        this.logger = logger;
        this.prescription = prescription;
        
        GetPatientList();
        
        if(prescription != null){
            txtDescription.setText(prescription.getDescription());
        }
    }
    
    private void GetPatientList(){
        cmbPatient.removeAllItems();
        ArrayList<User> list = DatabaseManager.getUserByValue(this, "","","patient");
        User patient = null;
        for(User us:list){
            if(prescription != null && us.getId().equals(prescription.getPatientId())){
                patient = us;
            }
            cmbPatient.addItem(us.getName()+"-"+us.getId());
        }
        
        cmbPatient.setSelectedItem(null);
        
        if(prescription != null){
            cmbPatient.setSelectedItem(patient.getName()+"-"+patient.getId()+"");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbPatient = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CAMS-Prescription");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        btnLogout.setText("Logout");
        btnLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        jPanel2.add(btnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 70));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Complete the following");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Select Patient");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        jPanel1.add(cmbPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 290, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Description");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, -1, -1));

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 290, -1));

        btnSave.setText("Save");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 250, 80, -1));

        btnBack.setText("<< Back");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 420, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        GUILogin gLogin = new GUILogin();
        gLogin.setLocationRelativeTo(null);
        gLogin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        GUIDashboard gDashboard = new GUIDashboard(logger);
        gDashboard.setLocationRelativeTo(null);
        gDashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String valid_message = "";
        String description = txtDescription.getText().trim();
        
        if(cmbPatient.getSelectedItem() == null || description.length() == 0){
            valid_message = "Please complete all fields";
        }
        
        if(valid_message.length() != 0){
            Alert.showAlert(this, "Warning",valid_message, "w");
            return;
        }
        
        String givenDate = Helper.formatDate("dd-MM-yyyy HH:mm:ss",new Date());        
        String patientId = cmbPatient.getSelectedItem().toString().split("-")[1];
        
        Prescription newData;        
        
        if(prescription == null){            
            newData = new Prescription(patientId,logger.getId(),givenDate,description);
            newData.setTransactionId("MDH"+Helper.formatDate("yyyyHHssMMmmdd", new Date()));
        }else{
            newData = prescription;
            newData.setPatientId(patientId);
            newData.setDateGiven(givenDate);            
            newData.setDescription(description);
        }
        
        int result = Helper.showConfirmDialog(this, "Do you want to "+(prescription != null ? "update":"create")+" prescription details ?");
        if(result == JOptionPane.YES_OPTION){
            boolean add_update_result = false;
            
            if(prescription == null){
                ArrayList<Prescription> newAdd = new ArrayList<>();
                newAdd.add(newData);
                add_update_result = DatabaseManager.addPrescription(this,newAdd);
            }else{
                add_update_result = DatabaseManager.updatePrescription(this,newData);
            }   
            
            if(add_update_result){
                Alert.showAlert(this,"Info", "Prescription "+(prescription != null ? "updated":"created")+" successfully", "i");
                GUIDashboard gDashboard = new GUIDashboard(logger);
                gDashboard.setLocationRelativeTo(null);
                gDashboard.setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIPrescriptionManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIPrescriptionManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIPrescriptionManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIPrescriptionManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIPrescriptionManager(parentPage,logger,prescription).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbPatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtDescription;
    // End of variables declaration//GEN-END:variables
}
