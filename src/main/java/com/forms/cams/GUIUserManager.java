/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.forms.cams;

import com.database.cams.DatabaseManager;
import com.models.cams.Address;
import com.models.cams.Patient;
import com.models.cams.Staff;
import com.models.cams.User;
import com.shared.cams.Alert;
import com.shared.cams.Helper;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class GUIUserManager extends javax.swing.JFrame {

    /**
     * Creates new form GUIUserManager
     */
    
    
    static JFrame parentPage;
    static User user;
    static User logger;
    
    public GUIUserManager(JFrame parentPage,User logger,User user) {
        initComponents();
        
        this.parentPage = parentPage;
        this.logger = logger;
        this.user = user;
        
        GetUserTypeList();
        AssignValues();
    }
    
    private void AssignValues(){
        if(user != null){
            txtName.setText(user.getName());
            txtEmail.setText(user.getEmail());
            txtContact.setText(user.getContact());
            
            if(user instanceof Patient){
                Patient patient = (Patient)user;
                txtCity.setText(patient.getAddress().getCity());
                txtState.setText(patient.getAddress().getState());
                txtPostalCode.setText(patient.getAddress().getPostalCode());
            }
        }
        
        txtCity.setEditable((user == null || (user instanceof Patient)));
        txtState.setEditable((user == null || (user instanceof Patient)));
        txtPostalCode.setEditable((user == null || (user instanceof Patient)));
    }
    
    private void GetUserTypeList(){
        cmbUserType.removeAllItems();
        ArrayList<String> list = Helper.getUserTypeList();
        for(String type:list){
            cmbUserType.addItem(type);
        }
        
        cmbUserType.setSelectedItem(null);
        
        if(user != null){
            cmbUserType.setSelectedItem((user instanceof Patient) ? "Patient":"Staff");            
        }
        cmbUserType.setEnabled(user == null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtPostalCode = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cmbUserType = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CAMS-Users");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        btnLogout.setText("Logout");
        btnLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        jPanel2.add(btnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 20, -1, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 70));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 210, 30));
        jPanel1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 210, 30));

        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContactKeyTyped(evt);
            }
        });
        jPanel1.add(txtContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 210, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Contact");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Email");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Full Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        jLabel2.setText("Complete the following");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));
        jPanel1.add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 210, 30));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("City");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));
        jPanel1.add(txtState, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 210, 30));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("State");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, -1, -1));

        txtPostalCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPostalCodeKeyTyped(evt);
            }
        });
        jPanel1.add(txtPostalCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 200, 210, 30));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Postal Code");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, -1, -1));

        btnSubmit.setText("Save");
        btnSubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        jPanel1.add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 240, 100, 30));

        btnBack.setText("<< Back");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, 90, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("User Type");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        cmbUserType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbUserTypeItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbUserType, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 210, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 710, 280));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        GUILogin gLogin = new GUILogin();
        gLogin.setLocationRelativeTo(null);
        gLogin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void txtContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();  // if it's not a number, ignore the event
        }
    }//GEN-LAST:event_txtContactKeyTyped

    private void txtPostalCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPostalCodeKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();  // if it's not a number, ignore the event
        }
    }//GEN-LAST:event_txtPostalCodeKeyTyped

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:

        String full_name = txtName.getText().trim();
        String email = txtEmail.getText().trim();
        String phone = txtContact.getText().trim();
        
        String city = txtCity.getText();
        String state = txtState.getText();
        String postal_code = txtPostalCode.getText();

        String valid_message = "";

        if(full_name.length() == 0 || email.length() == 0 || phone.length() == 0
            ){
            valid_message = "Please complete all person info details";
        }

        if(valid_message.length() != 0){
            Alert.showAlert(this, "Warning",valid_message, "w");
            return;
        }

        if(!Helper.validateEmail(email)){
            valid_message = "Invalid email address";
        }

        if(valid_message.length() != 0){
            Alert.showAlert(this, "Warning",valid_message, "w");
            return;
        }
        
        if(cmbUserType.getSelectedItem() == null){
            valid_message = "Please select user type";
        }
        
        if(valid_message.length() != 0){
            Alert.showAlert(this, "Warning",valid_message, "w");
            return;
        }
        
        String user_type = cmbUserType.getSelectedItem().toString();

        if(user_type.equals("Patient")){            
            if(city.length() == 0 || state.length() == 0 || postal_code.length() == 0){
                valid_message = "Please complete all address details";
            }

            if(valid_message.length() != 0){
                Alert.showAlert(this, "Warning",valid_message, "w");
                return;
            }
        }        

        //Create address
        Address patientAddress = new Address();
        
        if(user_type.equals("Patient")){
            patientAddress.setCity(city);
            patientAddress.setState(state);
            patientAddress.setPostalCode(postal_code);
        }
        User newUser;
        User addUser;
        
        if(user != null){
           newUser = user;
           if(user_type.equals("Patient")){               
               Patient patient =  new Patient(patientAddress, full_name, email, newUser.getPassword(), phone);
               patient.setId(newUser.getId());
               addUser = patient;
           }else{
               Staff staff =  new Staff(full_name, email, newUser.getPassword(), phone);
               staff.setId(newUser.getId());
               addUser = staff;
           }           
        }else{
            if(user_type.equals("Patient")){
                Patient patient =  new Patient(patientAddress, full_name, email, (email.split("@")[0]+"1234"), phone);
                patient.setId("PT"+Helper.formatDate("yyyyHHssMMmmdd", new Date())); 
                addUser = patient;
            }else{
                Staff staff =  new Staff(full_name, email, (email.split("@")[0]+"1234"), phone);
                staff.setId("ST"+Helper.formatDate("yyyyHHssMMmmdd", new Date())); 
                addUser = staff;
            }        
        }
        
        ArrayList<User> loCheckUser = DatabaseManager.getUserByValue(this,"", email,"");

        if(loCheckUser != null && !loCheckUser.isEmpty()){
            valid_message = (user == null) || (user != null && !loCheckUser.get(0).getId().equals(user.getId())) ? "Email address already exist":"";           
        }

        if(valid_message.length() != 0){
            Alert.showAlert(this, "Warning",valid_message, "w");
            return;
        }
        
        int result = Helper.showConfirmDialog(this, "Do you want to "+(user != null ? "update":"create")+" user details ?");
        if(result == JOptionPane.YES_OPTION){
            boolean add_update_result = false;
            
            if(user == null){
                ArrayList<User> newData = new ArrayList<>();
                newData.add(addUser);
                add_update_result = DatabaseManager.addUser(this,newData);
            }else{
                add_update_result = DatabaseManager.updateUser(this,addUser);
            }   
            
            if(add_update_result){
                Alert.showAlert(this,"Info", "User "+(user != null ? "updated":"created")+" successfully", "i");
                GUIDashboard gDashboard = new GUIDashboard(logger);
                gDashboard.setLocationRelativeTo(null);
                gDashboard.setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        GUIDashboard gDashboard = new GUIDashboard(logger);
        gDashboard.setLocationRelativeTo(null);
        gDashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbUserTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbUserTypeItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() == ItemEvent.SELECTED)
        {
            String item = (String) evt.getItem();
            txtCity.setEditable(item != null && item.equals("Patient"));
            txtState.setEditable(item != null && item.equals("Patient"));
            txtPostalCode.setEditable(item != null && item.equals("Patient"));
        }
    }//GEN-LAST:event_cmbUserTypeItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIUserManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIUserManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIUserManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIUserManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIUserManager(parentPage,logger,user).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cmbUserType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPostalCode;
    private javax.swing.JTextField txtState;
    // End of variables declaration//GEN-END:variables
}
